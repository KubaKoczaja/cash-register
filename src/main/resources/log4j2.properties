# Set to debug or trace if log4j initialization is failing
status = warn
# Name of the configuration
name = MyConfig

# Console appender configuration
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{dd-MM-yyyy HH:mm:ss} %style{%highlight{%-5p}}{Bright} %c{1}:%L - %m%throwable{short.methodName}%n


property.basePath = c:/temp/logs

# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= ${basePath}/cash_register.log
appender.rolling.filePattern= ${basePath}/cash_register_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{dd-MM-yyyy HH:mm:ss.SSS} %level [%t] [%l] - %msg%throwable{short.methodName}%n 
appender.rolling.policies.type = Policies
appender.rolling.filter.threshold.type = ThresholdFilter
appender.rolling.filter.threshold.level = warn


# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 1 days
appender.rolling.strategy.delete.ifLastModified.age = 1d

# Configure root logger
rootLogger.level = info
rootLogger.appenderRef.rolling.ref = fileLogger
rootLogger.appenderRef.stdout.ref = consoleLogger